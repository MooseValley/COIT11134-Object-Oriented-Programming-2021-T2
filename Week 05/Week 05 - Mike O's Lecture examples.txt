******************************************************
COIT11134 Object Oriented Programming (2021-T2)
Week: 05
Course WEB Page (Moodle):         https://moodle.cqu.edu.au/course/view.php?id=21818
Course Coordinator:               Umapathy "Venu" Venugopal, Ph. 02 9324 5789, Sydney, Email: u.venugopal@cqu.edu.au
Rocky Teacher (Part-Time):        Mike O'Malley, m.omalley@cqu.edu.au
Mike O's GitHub for course/term:  https://github.com/MooseValley/Uni-COIT11134-Object-Oriented-Programming-2021-T2
Mike O'Malley's Java Videos:      http://tinyurl.com/MikesJavaVideos
******************************************************

ROAD MAP:
Week 01 - Revision of Java, Github review.
Week 02 - Inheritance
Week 03 - Polymorphism
Week 04 - GUI and Event Handling
Week 05 - GUI and Event Handling.  Next week: mid-term break    <--- YOU ARE HERE !
Week 06 - Exception Handling, and File IO
Week 07 - Interfaces and Inner Classes
Week 08 - Generic methods and classes
Week 09 - Generic classes
Week 10 - List and Algorithm
Week 11 - Stacks, Queues and Trees
Week 12 - Final Revision


LAST WEEK: Week 04
* Week 04 - GUI and Event Handling
* We did 3 hours of GUI programming / dev
* Developed a very basic GUI from first principles.
* Used SceneBuilder to build a GUI - overkill, sledgehammer to crack a walnut

THIS WEEK: Week 05
* Week 05 - GUI and Event Handling.  Next week: mid-term break    <--- YOU ARE HERE !


Next week is mid-term BREAK
Assignment 1 due at end of Week 6

Do lots and lots and lots of GUI programming and programming covering all of the topics we have covered - 
*BEFORE* you try and complete the assignment.

12 hour MINIMUM per week.



-----------------------------
MVC Model View Controller
-----------------------------
Model
	data classes
	Vehicle
	Car 
	Truck
View
	xml
	console app System.out.print ...
	Web App -> Console App -> GUI App -> ... Mobile App
	
Controller
	Brains 
	All of the processing
	



-----------------------------
Exception Handling
-----------------------------

int k = Integer.parseInt ("abc");      // ERROR: NumberFormatException

double d = Double.parseDouble ("Abc"); // ERROR: NumberFormatException


try
catch
throw
finally


try
{
   double d = Double.parseDouble ("Abc"); // ERROR: NumberFormatException
}
catch (NumberFormatException err)
{
   JOptionPane.showMessageDialog (null, "Error: not a valid number");
   dataValid = false;
}


Database connections
Network connections
File I/O

Some things in Java - Java does NOT care if you handle exceptions or not
==> Unchecked Exceptions

	double d = Double.parseDouble ("Abc"); // ERROR: NumberFormatException

Some things in Java, the code wont compile let alone run unless 
you handle the exceptions
==> Checked Exceptions

	Database connections
	Network connections
	File I/O


Delphi / Pascal
	Application.ProcessMessages();
	


        Parent root = FXMLLoader.load (getClass().getResource("FXMLDocument.fxml"));
        Scene scene = new Scene(root);
        Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
        stage.setScene(scene);
        stage.show(); 


	
EOF.




